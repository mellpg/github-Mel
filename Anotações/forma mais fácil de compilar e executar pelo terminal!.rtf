{\rtf1\fbidis\ansi\ansicpg1252\deff0\nouicompat\deflang1046{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Calibri;}{\f2\fnil\fcharset1 Segoe UI Symbol;}{\f3\fnil\fcharset1 Cambria Math;}{\f4\fnil\fcharset0 Cambria Math;}{\f5\fnil Cambria Math;}}
{\*\generator Riched20 10.0.19041}{\*\mmathPr\mmathFont3\mwrapIndent1440 }\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs22\lang22 Voc\'ea precisa navegar at\'e9 a pasta onde o arquivo est\'e1, que no seu caso \'e9:\par
C:\\materiais dio\\java\\Estruturas de repeti\'e7\'e3o while e do while\\src\par
Para fazer isso certinho, siga este passo a passo:\par
Abra o Explorador de Arquivos, navegue at\'e9 essa pasta e abra ela:\par
C:\\materiais dio\\java\\Estruturas de repeti\'e7\'e3o while e do while\\src\par
Dentro dessa pasta, clique com Shift + bot\'e3o direito do mouse em um espa\'e7o vazio (n\'e3o no arquivo) e escolha:\par
\f1\ldblquote\f0 Abrir janela do PowerShell aqui\f1\rdblquote\f0\par
\par
Na janela do PowerShell que abrir, digite:\par
\par
dir *.java\par
para confirmar que o App.java est\'e1 ali.\par
Compile o arquivo:\par
javac App.java\par
Execute o programa:\par
java App \line\line\i PS C:\\materiais dio\\java\\Estruturas de repetic\u807?a\u771?o while e do while\\src> javac App.java\par
PS C:\\materiais dio\\java\\Estruturas de repetic\u807?a\u771?o while e do while\\src> java App\par
informe um nome:\par
Mel\par
Mel\par
informe um nome:\par
Andressa\par
Andressa\par
informe um nome:\par
Lucas\par
Lucas\par
informe um nome:\par
Fim da execu\'e7\'e3o.\par
PS C:\\materiais dio\\java\\Estruturas de repetic\u807?a\u771?o while e do while\\src>\par
nesse caso por que usamos o javac?\par
\par
\par
O ChatGPT disse:\par
Boa pergunta, Mel! \f2\u-10179?\u-8700?\f0\par
\par
Aqui vai a explica\'e7\'e3o simples:\par
\par
javac \'e9 o compilador Java. Ele pega o seu c\'f3digo-fonte escrito em .java (que \'e9 linguagem humana, entend\'edvel pra gente) e transforma em bytecode, que \'e9 um arquivo .class. Esse bytecode \'e9 um c\'f3digo intermedi\'e1rio que a M\'e1quina Virtual Java (JVM) entende.\par
\par
java \'e9 o interpretador/executor da JVM. Ele pega o arquivo .class (o bytecode) e executa ele na m\'e1quina virtual, rodando seu programa.\par
\par
Ent\'e3o o fluxo b\'e1sico \'e9:\par
Voc\'ea escreve o c\'f3digo no arquivo App.java.\par
\par
Roda javac App.java \f3\u8594?\f1  \f0 gera App.class (bytecode).\par
\par
Roda java App \f3\u8594?\f1  \f0 executa o bytecode na JVM.\par
\par
Isso serve pra garantir que seu programa Java possa rodar em qualquer computador que tenha JVM, independente do sistema operacional, porque o bytecode \'e9 port\'e1til.\par
\par
Se quiser, posso te ajudar a entender melhor o que acontece dentro do processo. Quer?\par
\par
\par
\par
\par
\par
\par
\par
\par
Voc\'ea disse:\par
sempre tem que usar?\par
\par
\par
O ChatGPT disse:\par
Nem sempre, Mel! Depende do contexto:\par
\par
Se voc\'ea estiver s\'f3 escrevendo e rodando programas simples diretamente no seu PC, sim, normalmente voc\'ea usa o javac para compilar e depois o java para executar \f1\emdash  esse \f0\'e9 o processo cl\'e1ssico e manual.\par
\par
Mas em alguns casos, voc\'ea n\'e3o precisa usar javac explicitamente, porque:\par
\par
IDE (como VS Code, IntelliJ, Eclipse) geralmente compilam seu c\'f3digo automaticamente quando voc\'ea roda o programa.\par
\par
Ferramentas de build (Maven, Gradle) fazem todo o processo de compila\'e7\'e3o e execu\'e7\'e3o para voc\'ea, escondendo o javac e o java.\par
\par
Em vers\'f5es mais recentes do Java (a partir do Java 11), voc\'ea pode at\'e9 rodar um arquivo .java direto com:\par
\par
nesse\f4  \f0 caso\f4  \f0 por\f4  \f0 que\f4  \f0 usamos\f4  \f0 o\f4  \f0 javac\f4 ?\f0\par
\par
\par
O\f4  \f0 ChatGPT\f4  \f0 disse\f4 :\f0\par
Boa\f4  \f0 pergunta\f4 , \f0 Mel\f4 ! \f2\u-10179?\u-8700?\f0\par
\par
Aqui\f4  \f0 vai\f4  \f0 a\f4  \f0 explica\'e7\'e3o\f4  \f0 simples\f4 :\f0\par
\par
javac\f4  \f0\'e9\f4  \f0 o\f4  \f0 compilador\f4  \f0 Java\f4 . \f0 Ele\f4  \f0 pega\f4  \f0 o\f4  \f0 seu\f4  \f0 c\'f3digo\f4 -\f0 fonte\f4  \f0 escrito\f4  \f0 em\f4  .\f0 java\f4  (\f0 que\f4  \f0\'e9\f4  \f0 linguagem\f4  \f0 humana\f4 , \f0 entend\'edvel\f4  \f0 pra\f4  \f0 gente\f4 ) \f0 e\f4  \f0 transforma\f4  \f0 em\f4  \f0 bytecode\f4 , \f0 que\f4  \f0\'e9\f4  \f0 um\f4  \f0 arquivo\f4  .\f0 class\f4 . \f0 Esse\f4  \f0 bytecode\f4  \f0\'e9\f4  \f0 um\f4  \f0 c\'f3digo\f4  \f0 intermedi\'e1rio\f4  \f0 que\f4  \f0 a\f4  \f0 M\'e1quina\f4  \f0 Virtual\f4  \f0 Java\f4  (\f0 JVM\f4 ) \f0 entende\f4 .\f0\par
\par
java\f4  \f0\'e9\f4  \f0 o\f4  \f0 interpretador\f4 /\f0 executor\f4  \f0 da\f4  \f0 JVM\f4 . \f0 Ele\f4  \f0 pega\f4  \f0 o\f4  \f0 arquivo\f4  .\f0 class\f4  (\f0 o\f4  \f0 bytecode\f4 ) \f0 e\f4  \f0 executa\f4  \f0 ele\f4  \f0 na\f4  \f0 m\'e1quina\f4  \f0 virtual\f4 , \f0 rodando\f4  \f0 seu\f4  \f0 programa\f4 .\f0\par
\par
Ent\'e3o\f4  \f0 o\f4  \f0 fluxo\f4  \f0 b\'e1sico\f4  \f0\'e9\f4 :\f0\par
Voc\'ea\f4  \f0 escreve\f4  \f0 o\f4  \f0 c\'f3digo\f4  \f0 no\f4  \f0 arquivo\f4  \f0 App\f4 .\f0 java\f4 .\f0\par
\par
Roda\f4  \f0 javac\f4  \f0 App\f4 .\f0 java\f4  \f3\u8594?\f5  \f0 gera\f4  \f0 App\f4 .\f0 class\f4  (\f0 bytecode\f4 ).\f0\par
\par
Roda\f4  \f0 java\f4  \f0 App\f4  \f3\u8594?\f5  \f0 executa\f4  \f0 o\f4  \f0 bytecode\f4  \f0 na\f4  \f0 JVM\f4 .\f0\par
\par
Isso\f4  \f0 serve\f4  \f0 pra\f4  \f0 garantir\f4  \f0 que\f4  \f0 seu\f4  \f0 programa\f4  \f0 Java\f4  \f0 possa\f4  \f0 rodar\f4  \f0 em\f4  \f0 qualquer\f4  \f0 computador\f4  \f0 que\f4  \f0 tenha\f4  \f0 JVM\f4 , \f0 independente\f4  \f0 do\f4  \f0 sistema\f4  \f0 operacional\f4 , \f0 porque\f4  \f0 o\f4  \f0 bytecode\f4  \f0\'e9\f4  \f0 port\'e1til\f4 .\f0\par
\par
Se\f4  \f0 quiser\f4 , \f0 posso\f4  \f0 te\f4  \f0 ajudar\f4  \f0 a\f4  \f0 entender\f4  \f0 melhor\f4  \f0 o\f4  \f0 que\f4  \f0 acontece\f4  \f0 dentro\f4  \f0 do\f4  \f0 processo\f4 . \f0 Quer\f4 ?\f0\par
\par
\par
\par
\par
\par
\par
\par
\par
Voc\'ea\f4  \f0 disse\f4 :\f0\par
sempre\f4  \f0 tem\f4  \f0 que\f4  \f0 usar\f4 ?\f0\par
\par
\par
O\f4  \f0 ChatGPT\f4  \f0 disse\f4 :\f0\par
Nem\f4  \f0 sempre\f4 , \f0 Mel\f4 ! \f0 Depende\f4  \f0 do\f4  \f0 contexto\f4 :\f0\par
\par
Se\f4  \f0 voc\'ea\f4  \f0 estiver\f4  \f0 s\'f3\f4  \f0 escrevendo\f4  \f0 e\f4  \f0 rodando\f4  \f0 programas\f4  \f0 simples\f4  \f0 diretamente\f4  \f0 no\f4  \f0 seu\f4  \f0 PC\f4 , \f0 sim\f4 , \f0 normalmente\f4  \f0 voc\'ea\f4  \f0 usa\f4  \f0 o\f4  \f0 javac\f4  \f0 para\f4  \f0 compilar\f4  \f0 e\f4  \f0 depois\f4  \f0 o\f4  \f0 java\f4  \f0 para\f4  \f0 executar\f4  \f3\emdash\f5  \f0 esse\f4  \f0\'e9\f4  \f0 o\f4  \f0 processo\f4  \f0 cl\'e1ssico\f4  \f0 e\f4  \f0 manual\f4 .\f0\par
\par
Mas\f4  \f0 em\f4  \f0 alguns\f4  \f0 casos\f4 , \f0 voc\'ea\f4  \f0 n\'e3o\f4  \f0 precisa\f4  \f0 usar\f4  \f0 javac\f4  \f0 explicitamente\f4 , \f0 porque\f4 :\f0\par
\par
IDE\f4  (\f0 como\f4  \f0 VS\f4  \f0 Code\f4 , \f0 IntelliJ\f4 , \f0 Eclipse\f4 ) \f0 geralmente\f4  \f0 compilam\f4  \f0 seu\f4  \f0 c\'f3digo\f4  \f0 automaticamente\f4  \f0 quando\f4  \f0 voc\'ea\f4  \f0 roda\f4  \f0 o\f4  \f0 programa\f4 .\f0\par
\par
Ferramentas\f4  \f0 de\f4  \f0 build\f4  (\f0 Maven\f4 , \f0 Gradle\f4 ) \f0 fazem\f4  \f0 todo\f4  \f0 o\f4  \f0 processo\f4  \f0 de\f4  \f0 compila\'e7\'e3o\f4  \f0 e\f4  \f0 execu\'e7\'e3o\f4  \f0 para\f4  \f0 voc\'ea\f4 , \f0 escondendo\f4  \f0 o\f4  \f0 javac\f4  \f0 e\f4  \f0 o\f4  \f0 java\f4 .\f0\par
\par
Em\f4  \f0 vers\'f5es\f4  \f0 mais\f4  \f0 recentes\f4  \f0 do\f4  \f0 Java\f4  (\f0 a\f4  \f0 partir\f4  \f0 do\f4  \f0 Java\f4  \f0 11\f4 ), \f0 voc\'ea\f4  \f0 pode\f4  \f0 at\'e9\f4  \f0 rodar\f4  \f0 um\f4  \f0 arquivo\f4  .\f0 java\f4  \f0 direto\f4  \f0 com\f4 :\f0\par
\par
bash\par
Copiar\par
Editar\par
java\f4  \f0 NomeDoArquivo\f4 .\f0 java\par
que\f4  \f0 o\f4  \f0 Java\f4  \f0 compila\f4  \f0 e\f4  \f0 executa\f4  \f0 numa\f4  \f0 tacada\f4  \f0 s\'f3\f4  \f3\emdash\f5  \f0 ideal\f4  \f0 para\f4  \f0 programas\f4  \f0 simples\f4 .\f0\par
que o Java compila e executa numa tacada s\'f3 \f1\emdash  ideal para programas simples.\b0\i0\f0\lang22\par
}
 